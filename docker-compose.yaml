version: '3.8'

services:

  betserver:
    build: ./
    container_name: betserver-c1
    ports: 
      - "9090:8080"
    environment:
      #MONGO_CONNECTION_STRING: "mongodb://bountyBetUser:a7fdy4hTXZWeL1kP@my_mongo:27017/bountyBetDB?replicaSet=rs0"
      MONGO_CONNECTION_STRING: "mongodb://bountyBetUser:a7fdy4hTXZWeL1kP@mongo:27017/bountyBetDB?replicaSet=rs0"
    volumes:
      - /c/devTools/dockerApplication/dockerApplicationLogs:/app/logs
    depends_on:
      - mongo-init
      #mongo:
      #  condition: service_healthy
    networks:
      - mongo_network 

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "8080:8080"
      #- "8443:8443"
    volumes:
      - /c/Users/liako/git/bountyBetServer/betCoreServer/nginx.conf:/etc/nginx/nginx.conf:ro
      #- /c/Users/liako/git/bountyBetServer/betCoreServer/certs/:/etc/nginx/certs:ro
    depends_on:
      - betserver
    networks:
      - mongo_network
      
  mongo:
    image: mongo:6.0
    container_name: my_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: liakos86
      MONGO_INITDB_ROOT_PASSWORD: art78tha3M2
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--keyFile", "/data/db/mongodb-keyfile", "--auth"]
    #command: ["/bin/bash", "-c", "echo 'PERMSSssss' && chmod 600 /data/db/mongodb-keyfile && chown mongodb:mongodb /data/db/mongodb-keyfile && exec mongod --replSet rs0 --bind_ip_all --keyFile /data/db/mongodb-keyfile"]
    #command: ["/bin/bash", "-c", "echo 'PERMSS' && exec mongod --replSet rs0 --bind_ip_all --noauth"]
    volumes:
      - /c/devTools/dockerApplication/dockerApplicationMongo:/data/db
      - ./init-mongo2.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./mongodb-key:/data/db/mongodb-keyfile
    ports:
      - "27017:27017"
    networks:
      - mongo_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  mongo-init:
    image: mongo:6.0
    container_name: mongo_init
    depends_on:
      mongo:
        condition: service_healthy
      #- my_mongo
    networks:
      - mongo_network
    entrypoint: [ "sh", "-c", "sleep 30 && mongosh --host my_mongo -u liakos86 -p art78tha3M2 --authenticationDatabase admin --eval 'rs.initiate({ _id: \"rs0\", members: [{ _id: 0, host: \"my_mongo:27017\" }] })' " ]

      
  mongo-express:
    image: mongo-express
    restart: always
    depends_on:
      - mongo-init
    ports:
      - "8081:8081" # Exposes UI on port 8081
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo" # Use the Docker service name
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: liakos86
      ME_CONFIG_MONGODB_ADMINPASSWORD: art78tha3M2
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
    networks:
      - mongo_network

#manually run: docker exec -it my_mongo mongosh -u liakos86 -p art78tha3M2 --authenticationDatabase admin --eval " rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'my_mongo:27017' }] });"
      

networks:
  mongo_network:
    driver: bridge
